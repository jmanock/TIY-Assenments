// Project Euler Problem Number 2

/* Each new term in the Finonacci sequence is generated by adding two terms.
 * By starting with 1 and 2, the first 10 terms will be
 *          1, 2, 3, 5, 8, 13, 21, 34, 55, 89,.....
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
*/

// Original Solution
/* var num = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
 * function euler2(prev, curr){
 * var sum = 0;
 * for (curr = curr; curr < 4000000; curr = prev + curr){
 *    prev = curr - prev;
 *      if(curr % 2 === 0){
 *          sum += curr;
 *      }
 *    }
 *    return sum;
 *  }
 *  console.log(euler2(1,2));
 */

// Refactored Solution

function Solution(){
  var fibo = [ ];
  var fiboEvens = [ ];
  var sum = 0;
  return {
    fibonacci: function(limit, prev, curr){
      for(curr = curr; curr < limit; curr = prev + curr){
        prev = curr - prev;
        fibo.push(curr);
      }
      return fibo;
    },
    filterEvens: function(fibo){
      fibo.forEach(function(value, index){
        if(value % 2 === 0){
          fiboEvens.push(value)
        }
      });
      return fiboEvens;
    },
    sum: function(fiboEvens){
      fiboEvens.forEach(function(value, index){
        sum += value;
      });
      return sum;
    }
  }
} // End Solution

console.log(Solution().fibonacci(4000000,1,2));
console.log(Solution().filterEvens(Solution().fibonacci(4000000,1,2)));
console.log(Solution().sum(Solution().filterEvens(Solution().fibonacci(4000000,1,2))));
